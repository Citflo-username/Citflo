const flowUnits="Liters per day",data={nodes:[{id:"A",alias:"Urine",type:"input",color:"yellow",COD:15e3,N:15e3,P:1200,Q:.7,gravity:.1,xBias:-800},{id:"H",alias:"Fertilizer",type:"input",color:"#32cd32",COD:15e3,N:15e3,P:1200,Q:-.01,gravity:.1,xBias:-500},{id:"N",alias:"Composting Toilet",type:"input",color:"brown",COD:35e4,N:5e3,P:3e3,Q:-.01,gravity:.1,xBias:-300},{id:"C",alias:"Household drains",type:"input",color:"magenta",COD:500,N:33,P:.15,Q:120,gravity:.1,xBias:-200},{id:"B",alias:"Fecal matter",type:"input",color:"brown",COD:35e4,N:5e3,P:3e3,Q:.2,gravity:.1,xBias:-600},{id:"K",alias:"Upstream",type:"input",color:"#1e90ff",COD:1,N:.1,P:.01,Q:1e7,gravity:0,xBias:200},{id:"J",alias:"Sludge and mineralization",type:"input",color:"brown",COD:15e4,N:1e3,P:3e3,Q:-.01,gravity:5,xBias:-10},{id:"G",alias:"Urine diversion",type:"calculated",color:"grey",COD:0,N:0,P:0,Q:0,gravity:.05,xBias:0},{id:"M",alias:"Fecal diversion",type:"calculated",color:"grey",COD:0,N:0,P:0,Q:0,gravity:.05,xBias:0},{id:"D",alias:"Effluent",type:"calculated",color:"grey",COD:0,N:0,P:0,Q:0,gravity:.05,xBias:0},{id:"E",alias:"Treatment unit",type:"calculated",color:"grey",COD:0,N:0,P:0,Q:0,gravity:.05,xBias:100},{id:"F",alias:"Discharge",type:"calculated",color:"#1e90ff",COD:0,N:0,P:0,Q:0,gravity:.05,xBias:200},{id:"L",alias:"Downstream",type:"calculated",color:"#1e90ff",COD:0,N:0,P:0,Q:0,gravity:-.2,xBias:-200}],links:[{source:"A",target:"G"},{source:"G",target:"M"},{source:"M",target:"D"},{source:"H",target:"G"},{source:"N",target:"M"},{source:"B",target:"M"},{source:"C",target:"D"},{source:"D",target:"E"},{source:"J",target:"E"},{source:"E",target:"F"},{source:"K",target:"F"},{source:"F",target:"L"}]},CONFIG={arrowheadRefX:8,arrowLinkDistance:100,circleR:10,minArrowWidth:.6,markerWidth:6,markerHeight:60,dimensions:{width:.75*window.innerWidth,height:.75*window.innerHeight},forces:{charge:-200,collision:30,gravity:.2,xspread:.3,yGravity:.05,xBias:.1}};let selectedInputNode="A",thicknessBasis="Q*P",isLogScale=!0,householdSettings={litresPerPerson:250,numberOfPeople:1},urineDiversion=!1,fecalDiversion=!1;function updateBouesFlow(){const e=data.nodes.find((e=>"Effluent"===e.alias)),t=data.nodes.find((e=>"Sludge and mineralization"===e.alias)),a=data.nodes.find((e=>"Fertilizer"===e.alias)),i=data.nodes.find((e=>"Composting Toilet"===e.alias)),n=data.nodes.find((e=>"Urine"===e.alias)),s=data.nodes.find((e=>"Fecal matter"===e.alias));e&&t?(t.Q=-.2,t.P=.3*e.P*e.Q/-t.Q,t.N=.3*e.N*e.Q/-t.Q,t.COD=.8*e.COD*e.Q/-t.Q,calculateNodeValues(data.nodes,data.links),updateVisualization()):console.warn("Required nodes ('Effluent' or 'Boues') not found."),a.Q=!0===urineDiversion?-n.Q:0,i.Q=!0===fecalDiversion?-s.Q:0}function updateHouseholdFlows(){const{numberOfPeople:e,litresPerPerson:t}=householdSettings,a=data.nodes.find((e=>"Household drains"===e.alias)),i=data.nodes.find((e=>"Urine"===e.alias)),n=data.nodes.find((e=>"Fecal matter"===e.alias));a&&(a.Q=e*t),i&&(i.Q=.7*e),n&&(n.Q=.2*e),calculateNodeValues(data.nodes,data.links),updateVisualization(),updateBouesFlow(),calculateNodeValues(data.nodes,data.links),updateBouesFlow(),writeMessage()}function getLinkId(e){return"string"==typeof e?e:e.id}function calculateNodeValues(e,t){e.forEach((a=>{if("calculated"===a.type){const i=t.filter((e=>getLinkId(e.target)===a.id));let n=0,s=0,r=0,l=0;i.forEach((t=>{const a=e.find((e=>e.id===getLinkId(t.source)));a&&(n+=a.Q,s+=a.Q*a.COD,r+=a.Q*a.N,l+=a.Q*a.P)})),a.Q=n,n>0?(a.COD=s/n,a.N=r/n,a.P=l/n):(a.COD=0,a.N=0,a.P=0)}}))}calculateNodeValues(data.nodes,data.links);const svg=d3.select("#graph").append("svg").attr("width",CONFIG.dimensions.width).attr("height",CONFIG.dimensions.height);function setupMarkers(){const e=svg.append("defs");e.append("marker").attr("id","arrow").attr("viewBox","0 -5 10 10").attr("refX",CONFIG.arrowheadRefX).attr("refY",0).attr("markerWidth",CONFIG.markerWidth).attr("markerHeight",CONFIG.markerHeight).attr("orient","auto").append("path").attr("d","M0,-5L10,0L0,5").attr("fill","#ccc"),e.append("marker").attr("id","arrow-reverse").attr("viewBox","0 -5 10 10").attr("refX",2).attr("refY",0).attr("markerWidth",CONFIG.markerWidth).attr("markerHeight",CONFIG.markerWidth).attr("orient","auto").append("path").attr("d","M10,-5L0,0L10,5").attr("fill","#ccc")}function setupSimulation(){const e=data.nodes.filter((e=>"calculated"===e.type)),t=d3.scaleLinear().domain([0,e.length-1]).range([100,CONFIG.dimensions.width-100]),a=new Map(e.map(((e,t)=>[e.id,t])));return d3.forceSimulation(data.nodes).force("link",d3.forceLink(data.links).id((e=>e.id)).distance(CONFIG.arrowLinkDistance)).force("charge",d3.forceManyBody().strength(CONFIG.forces.charge)).force("center",d3.forceCenter(CONFIG.dimensions.width/2,CONFIG.dimensions.height/2)).force("collision",d3.forceCollide().radius(CONFIG.forces.collision)).force("gravity",d3.forceY((e=>"calculated"===e.type?.75*CONFIG.dimensions.height:CONFIG.dimensions.height/2)).strength((e=>"calculated"===e.type?CONFIG.forces.gravity:0))).force("xspread",d3.forceX((e=>{if("calculated"===e.type){const i=a.get(e.id);return t(i)}return CONFIG.dimensions.width/2})).strength((e=>"calculated"===e.type?CONFIG.forces.xspread:0))).force("yGravity",d3.forceY((e=>CONFIG.dimensions.height/2)).strength((e=>e.gravity??CONFIG.forces.yGravity))).force("xBias",d3.forceX((e=>CONFIG.dimensions.width/2+(e.xBias??0))).strength(CONFIG.forces.xBias))}setupMarkers();const simulation=setupSimulation();let link=svg.append("g").selectAll("line").data(data.links).enter().append("line").attr("stroke","#ccc").attr("stroke-dasharray",(e=>{const t=data.nodes.find((t=>t.id===getLinkId(e.source)));return t&&"Minéralisation"===t.alias?"5,5":null})).attr("marker-start",(e=>{const t=data.nodes.find((t=>t.id===getLinkId(e.source)));return t&&t.Q<0?"url(#arrow-reverse)":null})).attr("marker-end",(e=>{const t=data.nodes.find((t=>t.id===getLinkId(e.source)));return t&&t.Q>=0?"url(#arrow)":null}));const node=svg.append("g").selectAll("circle").data(data.nodes).enter().append("circle").attr("r",CONFIG.circleR).attr("fill",(e=>e.color||"#888")).attr("stroke","#fff").attr("stroke-width",2).style("opacity",(e=>"Minéralisation"===e.alias||0===e.Q?0:1)).call(d3.drag().on("start",dragstarted).on("drag",dragged).on("end",dragended)),labelsGroup=svg.append("g").selectAll("g").data(data.nodes).enter().append("g").style("pointer-events","none");labelsGroup.append("text").attr("class","node-alias").attr("text-anchor","middle").attr("dy",(e=>["Fecal matter","Minéralisation","Sludge and mineralization"].includes(e.alias)?"1.5em":"0em")).style("font-weight","bold").text((e=>"Urine diversion"===e.alias?"":e.alias)),labelsGroup.append("text").attr("class","node-flow").attr("text-anchor","middle").attr("dy","1em").style("font-size","12px").style("font-style","italic").text((e=>{if("Urine diversion"===e.alias)return"";return["Fecal matter","Minéralisation","Sludge and mineralization"].includes(e.alias)?"":`${Math.abs(e.Q).toLocaleString("en-US",{minimumFractionDigits:1,maximumFractionDigits:1})} ${flowUnits}`})),labelsGroup.append("text").attr("class","node-p-concentration").attr("text-anchor","middle").attr("dy","2em").style("font-size","12px").style("font-style","italic").text((e=>["Fecal matter","Minéralisation","Sludge and mineralization","Effluent"].includes(e.alias)?"":`${e.P<10?e.P.toFixed(1):e.P.toFixed(0)} mg/L of P`)),labelsGroup.append("text").attr("class","node-p-mass").attr("text-anchor","middle").attr("dy","3em").style("font-size","12px").style("font-style","italic").text((e=>["Fecal matter","Minéralisation","Sludge and mineralization"].includes(e.alias)?`${(Math.abs(e.P*e.Q)/1e3).toFixed(2)} g/d of P`:""));const tooltip=d3.select("body").append("div").attr("class","tooltip").style("opacity",0);function updateLinkThickness(){const e=data.nodes.map((e=>{const t="Q"===thicknessBasis?Math.abs(e.Q):"Q*COD"===thicknessBasis?Math.abs(e.Q*e.COD):"Q*N"===thicknessBasis?Math.abs(e.Q*e.N):Math.abs(e.Q*e.P);return t>0?t:null})).filter((e=>null!==e)),t=d3.min(e)||.01,a=d3.max(e)||100,i=isLogScale?d3.scaleLog().domain([t,a]).range([.01,10]):d3.scaleLinear().domain([t,a]).range([.01,10]);link.attr("stroke-width",(e=>{const t=data.nodes.find((t=>t.id===getLinkId(e.source)));if(!t)return 1;const a="Q"===thicknessBasis?Math.abs(t.Q):"Q*COD"===thicknessBasis?Math.abs(t.Q*t.COD):"Q*N"===thicknessBasis?Math.abs(t.Q*t.N):Math.abs(t.Q*t.P);return a>0?Math.max(CONFIG.minArrowWidth,i(a)):0}))}function updateLabels(){labelsGroup.select(".node-alias").text((e=>"Fecal diversion"===e.alias||"Urine diversion"===e.alias?"":e.alias)),labelsGroup.select(".node-flow").text((e=>"Urine diversion"===e.alias||"Fecal diversion"===e.alias||["Fecal matter","Minéralisation","Sludge and mineralization","Discharge"].includes(e.alias)?"":`${Math.abs(e.Q).toLocaleString("en-US",{minimumFractionDigits:1,maximumFractionDigits:1})} Liters per day`)),labelsGroup.select(".node-p-concentration").style("fill",(e=>"Treatment unit"===e.alias?e.P<1?"green":"red":"Upstream"===e.alias||"Downstream"===e.alias?e.P<.02?"green":"red":"black")).text((e=>"Urine diversion"===e.alias||"Fecal diversion"===e.alias||["Fecal matter","Minéralisation","Sludge and mineralization","Discharge"].includes(e.alias)?"":`${e.P<10?e.P.toFixed(2):e.P.toFixed(0)} mg/L of P`)),labelsGroup.select(".node-p-mass").text((e=>"Urine diversion"===e.alias||"Fecal diversion"===e.alias||"Discharge"===e.alias?"":`${Math.abs((e.P*e.Q/1e3).toFixed(2))} g/d of P`))}function updateVisualization(){updateLinkThickness(),updateLabels(),simulation.alpha(.3).restart()}function updateInputControls(){const e=data.nodes.find((e=>e.id===selectedInputNode)),t=d3.select("#input-controls");if(t.selectAll("*").remove(),e&&"input"===e.type){t.append("div").classed("selected",!0).html(`\n                <h3>Node ${e.id} (${e.alias})</h3>\n                <label>COD:</label><input type="number" id="COD-${e.id}" value="${e.COD}" step="0.1"><br>\n                <label>N:</label><input type="number" id="N-${e.id}" value="${e.N}" step="0.1"><br>\n                <label>P:</label><input type="number" id="P-${e.id}" value="${e.P}" step="0.1"><br>\n                <label>Q:</label><input type="number" id="Q-${e.id}" value="${e.Q}" step="0.1"><br>\n            `).selectAll("input").on("change",(function(){const[e,t]=this.id.split("-");data.nodes.find((e=>e.id===t))[e]=+this.value,calculateNodeValues(data.nodes,data.links),updateVisualization()}))}t.append("div").style("margin-top","20px").style("padding","10px").style("background","#e8f4fd").style("border-radius","5px").style("font-size","12px").style("color","#666").html("💡 Click on any blue input node above to edit its values")}function setupControlSidebar(){const e=d3.select("#controls");e.insert("div",":first-child").attr("id","household-settings").style("margin-bottom","20px").style("padding","15px").style("background","#f9f9f9").style("border-radius","8px").style("border","1px solid #ddd").html(`\n            <h3 style="margin-top: 0;">🏠 Household Settings</h3>\n\n            <div style="margin-bottom: 15px;">\n                <label><strong>Number of population equivalents:</strong></label><br>\n                <input type="number" id="people-count" value="${householdSettings.numberOfPeople}" min="1" step="1" style="width:80px; margin-top:5px; padding:5px; border-radius:4px; border:1px solid #ccc;">\n            </div>\n\n            <div style="margin-bottom: 15px;">\n                <label><strong>Litres used per person:</strong></label><br>\n                <input type="number" id="litres-per-person" value="${householdSettings.litresPerPerson}" min="0" max="1000" step="1" style="width:80px; margin-top:5px; padding:5px; border-radius:4px; border:1px solid #ccc;">\n            </div>\n\n            <div>\n                <label style="display: flex; align-items: center; cursor: pointer;">\n                    <input type="checkbox" id="urine-diversion" ${urineDiversion?"checked":""} style="margin-right:10px; transform: scale(1.2);">\n                    <strong>Urine diversion</strong>\n                </label>\n            </div>\n            <div>\n                <label style="display: flex; align-items: center; cursor: pointer;">\n                    <input type="checkbox" id="fecal-diversion" ${fecalDiversion?"checked":""} style="margin-right:10px; transform: scale(1.2);">\n                    <strong>Fecal diversion</strong>\n                </label>\n            </div>\n\n        `);d3.select("#thickness-basis").on("change",(function(){thicknessBasis=this.value,updateLinkThickness()})),d3.select(e.node()).append("div").style("margin-top","15px").style("padding","15px").style("background","#f9f9f9").style("border-radius","8px").style("border","1px solid #ddd").html(`\n            <label><strong>📊 Arrow Scale:</strong></label><br>\n            <div style="margin-top: 10px;">\n                <label style="display: block; margin-bottom: 5px; cursor: pointer;">\n                    <input type="radio" id="linear-scale" name="scale" value="linear" ${isLogScale?"":"checked"} style="margin-right: 8px;">\n                    Linear Scale\n                </label>\n                <label style="display: block; cursor: pointer;">\n                    <input type="radio" id="log-scale" name="scale" value="log" ${isLogScale?"checked":""} style="margin-right: 8px;">\n                    Logarithmic Scale\n                </label>\n            </div>\n        `),d3.selectAll('input[name="scale"]').on("change",(function(){isLogScale="log"===this.value,updateLinkThickness()})),d3.select("#people-count").on("input",(function(){householdSettings.numberOfPeople=parseInt(this.value)||1,updateBouesFlow(),updateHouseholdFlows(),writeMessage()})),d3.select("#litres-per-person").on("input",(function(){householdSettings.litresPerPerson=parseFloat(this.value)||0,updateBouesFlow(),updateHouseholdFlows(),writeMessage()})),d3.select("#urine-diversion").on("change",(function(){urineDiversion=this.checked,updateBouesFlow(),updateHouseholdFlows(),writeMessage()})),d3.select("#fecal-diversion").on("change",(function(){fecalDiversion=this.checked,updateBouesFlow(),updateHouseholdFlows(),writeMessage()}))}function dragstarted(e,t){e.active||simulation.alphaTarget(.3).restart(),t.fx=t.x,t.fy=t.y}function dragged(e,t){t.fx=e.x,t.fy=e.y}function dragended(e,t){e.active||simulation.alphaTarget(0),t.fx=null,t.fy=null}function writeMessage(){function e(e){const t=data.nodes.find((t=>t.alias===e));let a=t?t.P:null;return Math.round(100*a)/100}let t=e("Treatment unit"),a=e("Upstream"),i=e("Downstream");d3.select("#zeroeth-line").html('Can we make the <span id="I">red</span> mg/L turn <span id="J">green</span> mg/L through resource diversion?'),d3.select("#first-line").html(`Treated effluent Phosphorus is <span id="X">${t}</span> mg/L compared to an effluent requirement of 1 mg/L.`),i<.025?d3.select("#second-line").html(`The receiving water concentration is <span id="Y">${i}</span> mg/L which meets our water quality target of 0.02 mg/L. Does this mean the treated effluent Phosphorus is <span id="X3">${t}</span> mg/L is acceptable? Is the number of people (${householdSettings.numberOfPeople}) realistic for this receiving water?`):d3.select("#second-line").html(`The receiving water concentration is raised from <span id="X2">${a}</span> to <span id="Y">${i}</span> mg/L. You are negatively impacting the environment!`),d3.select("#I").style("color","red"),d3.select("#J").style("color","green"),d3.select("#X").style("color",t>1?"red":"green"),d3.select("#X3").style("color",t>1?"red":"green"),d3.select("#X2").style("color","green"),d3.select("#Y").style("color",i>a?"red":"green")}node.on("mouseover",(function(e,t){"input"===t.type&&d3.select(this).style("cursor","pointer"),tooltip.transition().duration(200).style("opacity",.9),tooltip.html(`ID: ${t.id}<br>Alias: ${t.alias}<br>Type: ${t.type}<br>COD: ${t.COD.toFixed(2)}<br>N: ${t.N.toFixed(2)}<br>P: ${t.P.toFixed(2)}<br>Q: ${t.Q.toFixed(2)}`).style("left",e.pageX+10+"px").style("top",e.pageY-28+"px")})).on("mouseout",(function(){tooltip.transition().duration(500).style("opacity",0)})).on("click",(function(e,t){if("input"===t.type){selectedInputNode=t.id;!["Sludge and mineralization","Fertilizer","Composting Toilet"].includes(t.alias)&&updateInputControls()}})),simulation.on("tick",(()=>{link.attr("x1",(e=>e.source.x)).attr("y1",(e=>e.source.y)).attr("x2",(e=>e.target.x)).attr("y2",(e=>e.target.y)),node.attr("cx",(e=>e.x)).attr("cy",(e=>e.y)).style("opacity",(e=>"Minéralisation"===e.alias||"Urine diversion"===e.alias||"Fecal diversion"===e.alias||0===e.Q&&"input"===e.type?0:1)),labelsGroup.attr("transform",(e=>"input"===e.type?`translate(${e.x},${e.y-CONFIG.circleR-40})`:"calculated"===e.type?`translate(${e.x},${e.y+CONFIG.circleR+20})`:`translate(${e.x},${e.y-CONFIG.circleR-10})`)).attr("opacity",(e=>"Minéralisation"===e.alias?1:0===e.Q&&"input"===e.type?0:1))})),updateBouesFlow(),setupControlSidebar(),updateVisualization(),writeMessage();